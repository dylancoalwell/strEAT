    <script async defer src="https://maps.googleapis.com/maps/api/js?libraries=places,geometry,drawing&key=AIzaSyDq60WcziFdwMLmN56SCpsan8OQMKEqWn4&v=3&callback=handleDirections">
    </script>

    <style type="text/css">
      #map {
        width: 600px;
        height: 600px;
      }
    </style>

    <div id="map"></div>
    <div id="fuckme"></div>
    <script>
    console.log("new view doing stuffs")

      function handleDirections() {
          navigator.geolocation.getCurrentPosition(initMap, geolocationErrorHandler, {
            enableHighAccuracy: true
          })
      }

      function geolocationErrorHandler() {
      }

      function initMap(position) {
        var url = $(location).attr('href')
        var re = /(\S*)(\/directions)(\S*)/i
        var postUrl = url.replace(re,("$3"))

        console.log("postURL", postUrl)

        var finalUrl =  '/favorite_locations' +  postUrl

        console.log(finalUrl)

        $.ajax({
          url: finalUrl
        }).done(function (res) {
          console.log("responding...")
          console.log(res)
          var directionsService = new google.maps.DirectionsService;
          var directionsRenderer = new google.maps.DirectionsRenderer;
          console.log("initMap")

          var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: {lat: 41.85, lng: -87.65}
          });

          directionsRenderer.setMap(map);
          calculateAndDisplayRoute(directionsService, directionsRenderer, position, res)
        })


        // navigator.geolocation.getCurrentPosition(calculateOriginAndDestination)
      }

      function calculateAndDisplayRoute(directionsService, directionsRenderer, origin, destination) {
        directionsService.route({
          origin: new google.maps.LatLng(origin.coords.latitude, origin.coords.longitude),
          destination:  new google.maps.LatLng(destination.lat, destination.lng),
          travelMode: 'WALKING'
        }, function(response, status) {
          if (status === 'OK') {
            directionsRenderer.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }


    // Direction service for route boxer
    var directionService = new google.maps.DirectionsService();
    var routeboxer = new RouteBoxer();
</script>
